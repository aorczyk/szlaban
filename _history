{"entries":[{"timestamp":1739089582550,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"let "],[-1,"isOpen = true;\nlet lastState = -1;\nlet lastOpendedTime = 0"],[1,"lastState = -1"],[0,";\n\nb"]],"start1":96,"start2":96,"length1":66,"length2":22},{"diffs":[[0,"P1);"],[-1,"\n    let time = input.runningTime();"],[0,"\n\n  "]],"start1":192,"start2":192,"length1":44,"length2":8},{"diffs":[[0,"fChannel.Channel"],[-1,"4"],[1,"1"],[0,", PfOutput.Blue,"]],"start1":296,"start2":296,"length1":33,"length2":33},{"diffs":[[0,"nnel1, PfOutput."],[-1,"Blue"],[1,"Red"],[0,", PfSingleOutput"]],"start1":308,"start2":308,"length1":36,"length2":35},{"diffs":[[0,"put.Backward"],[-1,"3"],[1,"7"],[0,")\n          "]],"start1":340,"start2":340,"length1":25,"length2":25},{"diffs":[[0,"    basic.pause("],[-1,"10"],[1,"2"],[0,"00);\n           "]],"start1":363,"start2":363,"length1":34,"length2":33},{"diffs":[[0,"t)\n "],[-1,"       } else {\n"],[0,"    "]],"start1":490,"start2":490,"length1":24,"length2":8},{"diffs":[[0,"at)\n            "],[-1," "],[0,"basic.pause(5000"]],"start1":489,"start2":489,"length1":33,"length2":32},{"diffs":[[0,"use("],[-1,"5"],[1,"1"],[0,"000)"]],"start1":513,"start2":513,"length1":9,"length2":9},{"diffs":[[0,"nnel"],[-1,"4"],[1,"1"],[0,", Pf"]],"start1":580,"start2":580,"length1":9,"length2":9},{"diffs":[[0,"put."],[-1,"Blue"],[1,"Red"],[0,", Pf"]],"start1":592,"start2":592,"length1":12,"length2":11},{"diffs":[[0,"    basic.pause("],[-1,"10"],[1,"2"],[0,"00);\n           "]],"start1":634,"start2":634,"length1":34,"length2":33},{"diffs":[[0,"tate;\n    }\n"],[-1,"\n"],[1,"})\n\npfReceiver.connectIrReceiver(DigitalPin.P2)\nlet isOpen = true;\n\npfReceiver.onRCcommand(PfReceiverChannel.Channel2, PfControl.Forward, PfControl.Float, PfAction.Pressed, function() {\n    if (isOpen){\n        pfTransmitter.singleOutputMode(PfChannel.Channel1, PfOutput.Red, PfSingleOutput.Backward7)\n    "],[0,"    basic.pa"]],"start1":796,"start2":796,"length1":25,"length2":330},{"diffs":[[0,"use("],[-1,"10"],[1,"2"],[0,"00)"],[1,";\n        pfTransmitter.singleOutputMode(PfChannel.Channel1, PfOutput.Red, PfSingleOutput.BrakeThenFloat)\n        isOpen = false\n    }\n})\n\npfReceiver.onRCcommand(PfReceiverChannel.Channel2, PfControl.Float, PfControl.Float, PfAction.Pressed, function() {\n    if (!isOpen) {\n        pfTransmitter.singleOutputMode(PfChannel.Channel1, PfOutput.Red, PfSingleOutput.Forward3)\n        basic.pause(200);\n        pfTransmitter.singleOutputMode(PfChannel.Channel1, PfOutput.Red, PfSingleOutput.BrakeThenFloat)\n        isOpen = true\n    }"],[0,"\n})"],[-1,"\n\n"]],"start1":1126,"start2":1126,"length1":14,"length2":540}]}]},{"timestamp":1739090182061,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"e = "],[1,"-"],[0,"1;\n"],[-1,""],[0,"let "]],"start1":127,"start2":127,"length1":11,"length2":12},{"diffs":[[0,"fChannel.Channel"],[-1,"4"],[1,"1"],[0,", PfOutput.Blue,"]],"start1":511,"start2":511,"length1":33,"length2":33},{"diffs":[[0,"nnel1, PfOutput."],[-1,"Blue"],[1,"Red"],[0,", PfSingleOutput"]],"start1":523,"start2":523,"length1":36,"length2":35},{"diffs":[[0,"at)\n"],[-1,"            basic.showNumber(1)\n"],[0,"    "]],"start1":571,"start2":571,"length1":40,"length2":8},{"diffs":[[0,"fChannel.Channel"],[-1,"4"],[1,"1"],[0,", PfOutput.Blue,"]],"start1":801,"start2":801,"length1":33,"length2":33},{"diffs":[[0,"nnel1, PfOutput."],[-1,"Blue"],[1,"Red"],[0,", PfSingleOutput"]],"start1":813,"start2":813,"length1":36,"length2":35},{"diffs":[[0,"at)\n"],[-1,"            basic.showNumber(0)\n"],[0,"    "]],"start1":861,"start2":861,"length1":40,"length2":8}]}]},{"timestamp":1739090647101,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n    }\n\n"],[1,"    basic.pause(1000)\n"],[0,"})\n\n"]],"start1":967,"start2":967,"length1":12,"length2":34}]}]},{"timestamp":1739098564231,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,";\n    }\n"],[1,"\n"],[0,"})\n\n"]],"start1":966,"start2":966,"length1":12,"length2":13}]}]},{"timestamp":1739098565103,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"let last"],[-1,"State"],[1,"Opended"],[0,"Time = 0"]],"start1":134,"start2":134,"length1":21,"length2":23}]}]},{"timestamp":1739099804098,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"e){\n"],[-1,"        \n"],[0,"    "]],"start1":300,"start2":300,"length1":17,"length2":8}]}]},{"timestamp":1739099812843,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"lastStateTime = time;\n        lastState = state;\n"],[0,"\n   "]],"start1":308,"start2":308,"length1":57,"length2":8},{"diffs":[[0,"   }"],[-1,"\n    }\n\n    if (state == 1 && (time - lastStateTime > 2000)) {\n"],[1," else {\n      "],[0,"      "],[-1,"  "],[0,"basi"]],"start1":619,"start2":619,"length1":79,"length2":28},{"diffs":[[0,"ause(5000);\n"],[1,"    "],[0,"        pfTr"]],"start1":650,"start2":650,"length1":24,"length2":28},{"diffs":[[0,"rward3)\n        "],[1,"    "],[0,"basic.pause(1000"]],"start1":757,"start2":757,"length1":32,"length2":36},{"diffs":[[0,"ic.pause(1000);\n"],[1,"    "],[0,"        pfTransm"]],"start1":780,"start2":780,"length1":32,"length2":36},{"diffs":[[0,"nFloat)\n        "],[1,"    "],[0,"basic.showNumber"]],"start1":897,"start2":897,"length1":32,"length2":36},{"diffs":[[0,"mber(0)\n"],[1,"        }\n\n        lastState = state;\n"],[0,"    }\n})"]],"start1":929,"start2":929,"length1":16,"length2":54}]}]},{"timestamp":1739099914167,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n    }\n\n"],[1,"    if (state == 1 && (time - lastStateTime > 2000)) {\n        basic.pause(5000);\n        pfTransmitter.singleOutputMode(PfChannel.Channel4, PfOutput.Blue, PfSingleOutput.Forward3)\n        basic.pause(1000);\n        pfTransmitter.singleOutputMode(PfChannel.Channel4, PfOutput.Blue, PfSingleOutput.BrakeThenFloat)\n        basic.showNumber(0)\n    }"],[0,"\n})\n\n"]],"start1":672,"start2":672,"length1":13,"length2":359}]}]},{"timestamp":1739118176482,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"   }"],[-1,"\n\n        if (state == 1 && (time - lastStateTime > 2000)) {\n            basic.pause(5000);\n            pfTransmitter.singleOutputMode(PfChannel.Channel4, PfOutput.Blue, PfSingleOutput.Forward3)\n            basic.pause(1000);\n            pfTransmitter.singleOutputMode(PfChannel.Channel4, PfOutput.Blue, PfSingleOutput.BrakeThenFloat)\n            basic.showNumber(0)\n        }"],[0,"\n   "]],"start1":668,"start2":668,"length1":384,"length2":8}]}]},{"timestamp":1739118179463,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ate == 1"],[1," && (time - lastStateTime > 2000)"],[0,") {\n    "]],"start1":688,"start2":688,"length1":16,"length2":49},{"diffs":[[0,"}\n    }\n"],[1,"\n\n"],[0,"})\n\n"]],"start1":1047,"start2":1047,"length1":12,"length2":14}]}]},{"timestamp":1739118226176,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"use("],[-1,"7"],[1,"5"],[0,"000)"]],"start1":720,"start2":720,"length1":9,"length2":9}]}]},{"timestamp":1739118999930,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"c.pause("],[-1,"3"],[1,"2"],[0,"000);\n  "]],"start1":850,"start2":850,"length1":17,"length2":17}]}]}],"snapshots":[{"timestamp":1739089582549,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"/>","main.ts":"pins.setPull(DigitalPin.P1, PinPullMode.PullUp)\npfTransmitter.connectIrSenderLed(AnalogPin.P0)\n\nlet lastState = -1;\n\nbasic.forever(function () {\n    let state = pins.digitalReadPin(DigitalPin.P1);\n\n    if (lastState != state){\n        if (state == 0){\n            pfTransmitter.singleOutputMode(PfChannel.Channel1, PfOutput.Red, PfSingleOutput.Backward7)\n            basic.pause(200);\n            pfTransmitter.singleOutputMode(PfChannel.Channel1, PfOutput.Red, PfSingleOutput.BrakeThenFloat)\n            basic.pause(1000);\n            pfTransmitter.singleOutputMode(PfChannel.Channel1, PfOutput.Red, PfSingleOutput.Forward3)\n            basic.pause(200);\n            pfTransmitter.singleOutputMode(PfChannel.Channel1, PfOutput.Red, PfSingleOutput.BrakeThenFloat)\n        }\n\n        lastState = state;\n    }\n})\n\npfReceiver.connectIrReceiver(DigitalPin.P2)\nlet isOpen = true;\n\npfReceiver.onRCcommand(PfReceiverChannel.Channel2, PfControl.Forward, PfControl.Float, PfAction.Pressed, function() {\n    if (isOpen){\n        pfTransmitter.singleOutputMode(PfChannel.Channel1, PfOutput.Red, PfSingleOutput.Backward7)\n        basic.pause(200);\n        pfTransmitter.singleOutputMode(PfChannel.Channel1, PfOutput.Red, PfSingleOutput.BrakeThenFloat)\n        isOpen = false\n    }\n})\n\npfReceiver.onRCcommand(PfReceiverChannel.Channel2, PfControl.Float, PfControl.Float, PfAction.Pressed, function() {\n    if (!isOpen) {\n        pfTransmitter.singleOutputMode(PfChannel.Channel1, PfOutput.Red, PfSingleOutput.Forward3)\n        basic.pause(200);\n        pfTransmitter.singleOutputMode(PfChannel.Channel1, PfOutput.Red, PfSingleOutput.BrakeThenFloat)\n        isOpen = true\n    }\n})","README.md":"\n> Open this page at [https://aorczyk.github.io/wedo-crocodile/](https://aorczyk.github.io/wedo-crocodile/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/aorczyk/wedo-crocodile** and import\n\n## Edit this project ![Build status badge](https://github.com/aorczyk/wedo-crocodile/workflows/MakeCode/badge.svg)\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/aorczyk/wedo-crocodile** and click import\n\n## Blocks preview\n\nThis image shows the blocks code from the last commit in master.\nThis image may take a few minutes to refresh.\n\n![A rendered view of the blocks](https://github.com/aorczyk/wedo-crocodile/raw/master/.github/makecode/blocks.png)\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","pxt.json":"{\n    \"name\": \"WeDo Crocodile\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"LEGO PF Transmitter\": \"github:aorczyk/lego-pf-transmitter#v0.0.7\",\n        \"PF Receiver\": \"github:aorczyk/lego-pf-receiver#v0.0.4\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"4.0.16\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}},{"timestamp":1739098564231,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"/>","main.ts":"pins.setPull(DigitalPin.P1, PinPullMode.PullUp)\npfTransmitter.connectIrSenderLed(AnalogPin.P0)\n\nlet isOpen = true;\nlet lastState = 1;\nlet lastOpendedTime = 0;\n\nbasic.forever(function () {\n    let state = pins.digitalReadPin(DigitalPin.P1);\n    let time = input.runningTime();\n\n    if (lastState != state){\n        if (state == 0){\n            pfTransmitter.singleOutputMode(PfChannel.Channel4, PfOutput.Blue, PfSingleOutput.Backward3)\n            basic.pause(1000);\n            pfTransmitter.singleOutputMode(PfChannel.Channel4, PfOutput.Blue, PfSingleOutput.BrakeThenFloat)\n            basic.showNumber(1)\n        } else {\n            basic.pause(5000);\n            pfTransmitter.singleOutputMode(PfChannel.Channel4, PfOutput.Blue, PfSingleOutput.Forward3)\n            basic.pause(1000);\n            pfTransmitter.singleOutputMode(PfChannel.Channel4, PfOutput.Blue, PfSingleOutput.BrakeThenFloat)\n            basic.showNumber(0)\n        }\n\n        lastState = state;\n    }\n\n    basic.pause(1000)\n})\n\n","README.md":"\n> Open this page at [https://aorczyk.github.io/wedo-crocodile/](https://aorczyk.github.io/wedo-crocodile/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/aorczyk/wedo-crocodile** and import\n\n## Edit this project ![Build status badge](https://github.com/aorczyk/wedo-crocodile/workflows/MakeCode/badge.svg)\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/aorczyk/wedo-crocodile** and click import\n\n## Blocks preview\n\nThis image shows the blocks code from the last commit in master.\nThis image may take a few minutes to refresh.\n\n![A rendered view of the blocks](https://github.com/aorczyk/wedo-crocodile/raw/master/.github/makecode/blocks.png)\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","pxt.json":"{\n    \"name\": \"Szlaban\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"LEGO PF Transmitter\": \"github:aorczyk/lego-pf-transmitter#v0.0.7\",\n        \"PF Receiver\": \"github:aorczyk/lego-pf-receiver#v0.0.4\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"4.0.16\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}},{"timestamp":1739118176482,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"/>","main.ts":"pins.setPull(DigitalPin.P1, PinPullMode.PullUp)\npfTransmitter.connectIrSenderLed(AnalogPin.P0)\n\nlet isOpen = true;\nlet lastState = 1;\nlet lastStateTime = 0;\n\nbasic.forever(function () {\n    let state = pins.digitalReadPin(DigitalPin.P1);\n    let time = input.runningTime();\n\n    if (lastState != state){\n        lastStateTime = time;\n        lastState = state;\n\n        if (state == 0){\n            pfTransmitter.singleOutputMode(PfChannel.Channel4, PfOutput.Blue, PfSingleOutput.Backward3)\n            basic.pause(1000);\n            pfTransmitter.singleOutputMode(PfChannel.Channel4, PfOutput.Blue, PfSingleOutput.BrakeThenFloat)\n            basic.showNumber(1)\n        }\n    }\n\n    if (state == 1 && (time - lastStateTime > 2000)) {\n        basic.pause(5000);\n        pfTransmitter.singleOutputMode(PfChannel.Channel4, PfOutput.Blue, PfSingleOutput.Forward3)\n        basic.pause(1000);\n        pfTransmitter.singleOutputMode(PfChannel.Channel4, PfOutput.Blue, PfSingleOutput.BrakeThenFloat)\n        basic.showNumber(0)\n    }\n})\n\n","README.md":"\n> Open this page at [https://aorczyk.github.io/wedo-crocodile/](https://aorczyk.github.io/wedo-crocodile/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/aorczyk/wedo-crocodile** and import\n\n## Edit this project ![Build status badge](https://github.com/aorczyk/wedo-crocodile/workflows/MakeCode/badge.svg)\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/aorczyk/wedo-crocodile** and click import\n\n## Blocks preview\n\nThis image shows the blocks code from the last commit in master.\nThis image may take a few minutes to refresh.\n\n![A rendered view of the blocks](https://github.com/aorczyk/wedo-crocodile/raw/master/.github/makecode/blocks.png)\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","pxt.json":"{\n    \"name\": \"Szlaban\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"LEGO PF Transmitter\": \"github:aorczyk/lego-pf-transmitter#v0.0.7\",\n        \"PF Receiver\": \"github:aorczyk/lego-pf-receiver#v0.0.4\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"4.0.16\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}}],"shares":[],"lastSaveTime":1739119812603}